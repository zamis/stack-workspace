name: stack-localhost-ubuntu-dev

volumes:
  home-kasm-user:
    name: static-home-kasm-user
  mnt-user-data:
    name: static-mnt-user-data
  mnt-user-share:
    name: static-mnt-user-share
  docker:
    name: static-docker
  certs:
    name: static-certs

services:
  docker:
    image: docker:28.0.1-dind
    restart: always
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - certs:/certs
      - docker:/var/lib/docker

  filebrowser:
    build:
      dockerfile_inline: |
        FROM filebrowser/filebrowser:v2.31.2
        ENV USER=kasm-user
        ENV HOME=/srv
        ENV CONFIG=/config
        RUN mkdir -p $$HOME && chown -R 1000:0 $$HOME
        RUN mkdir -p $$CONFIG && chown -R 1000:0 $$CONFIG
        RUN cat <<EOF > /.filebrowser.json
        {
          "port": 80,
          "baseURL": "",
          "address": "",
          "log": "stdout",
          "database": "/config/database.db",
          "root": "/srv"
        }
        EOF
        USER 1000
    command: --noauth --port=80 --root=/srv --database=/config/database.db
    restart: no
    environment:
      PUID: "$(id -u)"
      PGID: "$(id -g)"
      HOME: "/srv"
    volumes:
      - mnt-user-share:/srv:rw
    ports:
      - 6902:80

  ubuntu-dev:
    build:
      dockerfile_inline: |
        # syntax=docker/dockerfile:1.7-labs
        FROM localhost/ubuntu
        USER root
        RUN cat <<EOF > /dockerstartup/custom_startup.sh
        #!/usr/bin/env bash
        set -ex
        /usr/bin/desktop_ready && xterm /dockerstartup/utils/docker-port-forward.sh
        EOF
        RUN cat <<EOF > /dockerstartup/utils/install.sh
        #!/usr/bin/env bash
        set -ex
        usermod -a -G video kasm-user
        EOF
        RUN chmod +x /dockerstartup/custom_startup.sh
        RUN chmod +x /dockerstartup/utils/install.sh
        USER 1000
        RUN sudo bash /dockerstartup/utils/install.sh || exit 1;
    restart: always
    shm_size: 2gb
    security_opt:
      - apparmor=unconfined
      - seccomp=unconfined
    cap_add:
      - ALL
    environment:
      KASM_USER: "kasm-user"
      VNC_USER: kasm_user
      VNC_PW: password
      # DOCKER_HOST: tcp://docker:2376
      # DOCKER_HOST: unix://var/run/docker.sock
      # DOCKER_SOCK: unix://var/run/docker.sock
      DOCKER_TLS_VERIFY: 1
      DOCKER_TLS_CERTDIR: /certs
      DOCKER_CERT_PATH: /certs/client
      ROOTLESSKIT_STATE_DIR: /home/kasm-user/.docker/tmp
      XDG_RUNTIME_DIR: /home/kasm-user/.docker/run
      UB_IIT_SETTINGS_PATH: /home/kasm-user/tmp
      DOTNET_ROOT: /mnt/user-data/!apps/dotnet
      KASM_SVC_WEBCAM: 0
      KASM_SVC_PRINTER: 0
      KASM_SVC_AUDIO: 0
      KASM_SVC_AUDIO_INPUT: 0
      KASM_SVC_UPLOADS: 0
      KASM_SVC_GAMEPAD: 0
      PATH_ADD: /mnt/user-data/!apps/ub:/mnt/user-data/!apps/dotnet:$HOME/.dotnet/tools
    devices:
      - /dev/fuse:/dev/fuse
      # - /dev/snd:/dev/snd
    volumes:
      - certs:/certs:ro
      - home-kasm-user:/home/kasm-user:rw
      - mnt-user-data:/mnt/user-data:rw
      - mnt-user-share:/mnt/user-share:rw
    ports:
      - 6901:6901
